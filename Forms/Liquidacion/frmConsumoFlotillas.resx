<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="vpValidador.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARX2hAGO05+Nktej4ZLXo+GS16Phktej4ZLXo+GS16Phktej4ZLXo+GS16Phktej4Zrbo9fv8
        /Oubzu4fLFJpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABFfqEAY7Tn9O31+vn9/f3+/f39/v39/f79/f3+/f39/v39/f79/f3+7fX6+WO1
        6P1mtuj6/f39/me26LRerN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEV+oQBjtOf0/f39/o+NjP3q6un9r62s/fj4+PyysK/94uLh/Y+N
        jP39/f39Y7Xo/Wa26Pr9/f3+ZbXo+2O051kAAAAAAAAAAAAAAAAAAAAACgcDAGhGIwCbaDQAn2s2Ep9q
        NQWJXC4AMiIQAAAAAAAAAAAAAAAAAAAAAAAAAAAARX6hAGO05/T9/f3+jImJ/dPS0v1wbWz+7+/v/XBt
        bP7FxMP9jImJ/f39/f1jtej9Zrbo+v39/f5ltej7Y7Xn5QAAAAAAAAAAAAAAAAEBAACKXC4AsXc8SLF3
        PNmyeD39sXc88rF3PIuvdTsFNCMRAAAAAAAAAAAAAAAAAAAAAABFfqEAY7Tn9P39/f6MiYn90tLR/XBt
        bP7u7u79cG1s/sTDw/2MiYn9/f39/WO16P1mtuj6/f39/mW16Ptktej7AAAAAAAAAAAAAAAANSMRALF3
        PDKxdzz3sng9/bJ4Pf2yeD39sng9/bF3PI2LXS4AAAAAAAAAAAAAAAAAAAAAAEV+oQBjtOf0/f39/o+N
        jP3X1tb9cW5t/fLx8f11cnH9ycjI/Y+NjP39/f39Y7Xo/Wa26Pr9/f3+ZbXo+2S16PsAAAAAAAAAAAAA
        AABWOR0AsXc8nLJ4Pf2yeD39sng9/bJ4Pf2yeD39sXc89KtyOQcAAAAAAAAAAAAAAAAAAAAARX6hAGO0
        5/Tt9fr5/f39/v39/f79/f3+/f39/v39/f79/f3+/f39/u31+vljtej9Zrbo+v39/f5ltej7ZLXo+4hb
        LQCNXy8Ajl8wAJ9qNQCxdzy0sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sHY7F41fLwCOYDAAjmAwAI5g
        MAB3lZ8AY7Xn9WS16P5ktej+ZLXo/mS16P5ktej+ZLXo/mS16P5ktej+ZLXo/mS16P5mtuj6/f39/mW1
        6Ptktej7sXc8hLJ3PPiyeD39sXc8g7F2O4Gydzz8snc8/LJ3PPyydzz8snc8/LF2O9+wdjsIsXc887J4
        Pf2yeD39sng9/YyUjABjtef1ZLXo/mS16P5ktej+ZrPj+4GgtP2BoLT9ZrPj/GS16P5ktej+ZLXo/ma2
        6Pr9/f3+ZbXo+2S16Puxdzzisng9/bJ4Pf2xdzzgsHY7HLF2O9mydzz8snc8/LJ3PPyxdjv4sXY6UbF3
        PGWyeD39sng9/bJ4Pf2yeD39j5KHAGO15/Vktej+ZLXo/mS16P5psd/6lpOR/paTkf5psd/8ZLXo/mS1
        6P5ktej+Zrbo+v39/f5ltej7ZLXo+7J3PPSyeD39sng9/bJ4Pf2xdzyosHY7GrF2O4Wxdju5sXY7orF2
        Ozmxdjs5sXc877J4Pf2yeD39sng9/bJ4Pf2fl4QAY7Xn9WS16P5ktej+ZLXo/mmx3/qWk5H+lpOR/mmx
        3/xktej+ZLXo/mS16P5mtuj6/f39/mW16Ptktej7snc8+rJ4Pf2yeD39sng9/bJ4Pf2xdzzVsXc8a7F2
        PDyxdzxLsXc8l7F3PPeyeD39sng9/bJ4Pf2yeD39sng9/bybdwr7+/rj/Pz8/P39/f79/f3++Pf3/qKf
        nv2Wk5H+6Ofn/f39/f79/f3+/f39/v39/f79/f3+jcjt+GS16PuxdzzqsXc88rF3PPKxdzzysXc88rF3
        PPKxdzzysXc88rF3PPKxdzzysXc88rF3PPKxdzzysXc88rF3PPKxdzzyu4hVecHP1RZwuumiY7Xo/WS1
        6P5ktej+Z7Lh84OfseyRlpj8bK7Y/WS16P5ktej+ZLXo/pDK7vnx9/v6i8ft9vz8/O/9/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39+vr5yMfN
        yi95qMBGZLTl2mS16Phktej4ZLXo+HKrz++MmaD0bq3V9mS16Phktej4ZLXo+IfF7PTr9PnWtHxDuLJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9+K17R4ibiW0SkpCABJKQgQSSkIEElI59BJ6IbASbiXEEk4+ABJKQgQSQkYUEhpmdAIGa
        qQCxdzyEsng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2OYDAAAAAAALF3PDmyeD39zKZ/9uTRvvjk0b745NG++OTRvvjk0b7448+697iDTfqyeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/Y5gMAAAAAAAlmUyALF3PLq9i1n4+/r5+v39/fz9/f38/f39/P39/fz9/f38w5dq9rJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39jmAwAAAAAAA6JhMAsXc8K7F3PPjawKX3/f39/P39/fz9/f38/f39/P39
        /fzGm3D3sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2OYDAAAAAAAAAAAACAVisAsXc8hbR8Q/vw5tz4/f39/P39
        /fz9/f38/f39/MifdvuyeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/Y5gMAAAAAAAAAAAABgQCACqcTgGsXc8zb6N
        XPn49fH6/f39/P39/fz9/f38yaB397J4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39jmAwAAAAAAAAAAAAAAAAAEEs
        FgCxdjsjsXc87cWabvj59vT6/f39/P39/fzKo3v2sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2OYDAAAAAAAAAA
        AAAAAAAAAAAAAGtIIwCxdzxHsXc8+LiDTfrEmGz3xZpu97V+RvuyeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/Y5g
        MAAAAAAAAAAAAAAAAAAAAAAABQMBAIJXLACwdjxXsXc8+LJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39jmAwAAAAAAAAAAAAAAAAAAAAAAAAAAAACgYDAH9VKwCxdzxAsXc837J4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2OYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAFg6HQB7UykAfFMqAKFt
        NwCyeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/Y5gMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfFMqALJ3PfyyeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2ydz38jV8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB7UyoAsXc8w7J4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4
        Pf2yeD39sng9/bJ4Pf2yeD39sng9/bJ4Pf2yeD39sng9/bF3PMONXzAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADglEwB7UyoAfFMqAHxUKgB8VCoAfFQqAHxUKgB8VCoAfFQqAHxU
        KgB8VCoAfFQqAHxUKgB8VCoAfFQqAHxUKgB8VCoAfFQqAHxUKgB8UyoAe1MqAEQuFwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>